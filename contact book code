def display_contacts(contacts):
    if not contacts:
        print("Contact book is empty.")
        return

    print("\n--- Contacts ---")
    for name, phone in contacts.items():
        print(f"{name}: {phone}")
    print("----------------")

def add_contact(contacts):
    try:
        name = input("Enter contact name: ")
        if not name:
            raise ValueError("Name cannot be empty.")
        phone = input("Enter contact phone number: ")
        if not phone:
            raise ValueError("Phone number cannot be empty.")
        if not phone.isdigit():  #check if the phone number contains only digits
            raise ValueError("Invalid Phone number. Phone number should contain only digits.")
        if name in contacts:
            print("Contact with this name already exists. Please update instead of adding.")
            return

        contacts[name] = phone
        print(f"Contact '{name}' added successfully.")

    except ValueError as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")



def update_contact(contacts):
    try:
        name = input("Enter name of contact to update: ")
        if name not in contacts:
            print(f"Contact '{name}' not found.")
            return

        new_phone = input("Enter new phone number: ")
        if not new_phone:
            raise ValueError("Phone number cannot be empty.")
        if not new_phone.isdigit():
            raise ValueError("Invalid Phone number. Phone number should contain only digits.")

        contacts[name] = new_phone
        print(f"Phone number for '{name}' updated successfully.")

    except ValueError as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")


def search_contact(contacts):
    name = input("Enter name to search for: ")
    phone = contacts.get(name)  # Use .get() to handle missing keys safely
    if phone:
        print(f"{name}: {phone}")
    else:
        print(f"Contact '{name}' not found.")


def main():
    contacts = {}  # Initialize an empty dictionary to store contacts

    while True:
        print("\n--- Contact Book Menu ---")
        print("1. Add Contact")
        print("2. Update Contact")
        print("3. Search Contact")
        print("4. Display All Contacts")
        print("5. Exit")

        try:
            choice = int(input("Enter your choice: "))

            if choice == 1:
                add_contact(contacts)
            elif choice == 2:
                update_contact(contacts)
            elif choice == 3:
                search_contact(contacts)
            elif choice == 4:
                display_contacts(contacts)
            elif choice == 5:
                print("Exiting contact book program.")
                break
            else:
                print("Invalid choice. Please try again.")

        except ValueError:
            print("Invalid input. Please enter a number.")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")

if __name__ == "__main__":
    main()
